<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="namespacenc_1_1polynomial" kind="namespace" language="C++">
    <compoundname>nc::polynomial</compoundname>
    <innerclass refid="classnc_1_1polynomial_1_1_poly1d" prot="public">nc::polynomial::Poly1d</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacenc_1_1polynomial_1a3990b1eded86de9be5770c013e58042a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double nc::polynomial::chebyshev_t</definition>
        <argsstring>(uint32 n, dtype x) noexcept</argsstring>
        <name>chebyshev_t</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Chebyshev Polynomial of the first kind</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the chebyshev polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/chebyshev_t.hpp" line="50" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/chebyshev_t.hpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1a078793b666bab0bd2add2b139f989df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::polynomial::chebyshev_t</definition>
        <argsstring>(uint32 n, const NdArray&lt; dtype &gt; &amp;inArrayX) noexcept</argsstring>
        <name>chebyshev_t</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArrayX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Chebyshev Polynomial of the first kind</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the chebyshev polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inArrayX</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/chebyshev_t.hpp" line="65" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/chebyshev_t.hpp" bodystart="65" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1abc99c09581c24b9eb1f7bcaa6f0d40e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double nc::polynomial::chebyshev_u</definition>
        <argsstring>(uint32 n, dtype x) noexcept</argsstring>
        <name>chebyshev_u</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Chebyshev Polynomial of the second kind</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the chebyshev polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/chebyshev_u.hpp" line="50" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/chebyshev_u.hpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1aed39a034f0126aaeccbeb0718dea3c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::polynomial::chebyshev_u</definition>
        <argsstring>(uint32 n, const NdArray&lt; dtype &gt; &amp;inArrayX) noexcept</argsstring>
        <name>chebyshev_u</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArrayX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Chebyshev Polynomial of the second kind</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the chebyshev polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inArrayX</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/chebyshev_u.hpp" line="65" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/chebyshev_u.hpp" bodystart="65" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1aeaa35e3294d44739bd292234542fb032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double nc::polynomial::hermite</definition>
        <argsstring>(uint32 n, dtype x) noexcept</argsstring>
        <name>hermite</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hermite Polynomial</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the hermite polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/hermite.hpp" line="50" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/hermite.hpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1ab1427f4d365eb6cfde7d1633e4c4233b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::polynomial::hermite</definition>
        <argsstring>(uint32 n, const NdArray&lt; dtype &gt; &amp;inArrayX) noexcept</argsstring>
        <name>hermite</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArrayX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hermite Polynomial</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the hermite polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inArrayX</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/hermite.hpp" line="65" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/hermite.hpp" bodystart="65" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1a09b2c967d4e541797a00451a497951ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double nc::polynomial::laguerre</definition>
        <argsstring>(uint32 n, dtype x) noexcept</argsstring>
        <name>laguerre</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Laguerre Polynomial</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the leguerre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/laguerre.hpp" line="50" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/laguerre.hpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1aefe4861199729125ab86c64521789a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double nc::polynomial::laguerre</definition>
        <argsstring>(uint32 n, uint32 m, dtype x) noexcept</argsstring>
        <name>laguerre</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Associated Laguerre Polynomial</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the leguerre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the degree of the legendre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/laguerre.hpp" line="66" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/laguerre.hpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1a935b8c6209c506b9bba00276d072b11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::polynomial::laguerre</definition>
        <argsstring>(uint32 n, const NdArray&lt; dtype &gt; &amp;inArrayX) noexcept</argsstring>
        <name>laguerre</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArrayX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Laguerre Polynomial</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the leguerre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inArrayX</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/laguerre.hpp" line="81" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/laguerre.hpp" bodystart="81" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1ae5e4a468915bd710060b8515ff35baf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::polynomial::laguerre</definition>
        <argsstring>(uint32 n, uint32 m, const NdArray&lt; dtype &gt; &amp;inArrayX) noexcept</argsstring>
        <name>laguerre</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArrayX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Associated Laguerre Polynomial</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the leguerre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the degree of the legendre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inArrayX</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/laguerre.hpp" line="106" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/laguerre.hpp" bodystart="106" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1a0c7d0ac956ba2c60ea8190aa8cb31570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double nc::polynomial::legendre_p</definition>
        <argsstring>(int32 n, dtype x) noexcept</argsstring>
        <name>legendre_p</name>
        <param>
          <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Legendre Polynomial of the first kind</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the legendre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value. Requires -1 &lt;= x &lt;= 1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/legendre_p.hpp" line="51" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/legendre_p.hpp" bodystart="51" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1a33f41165cd6e8dd2d7cfb21fa8ed4c5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double nc::polynomial::legendre_p</definition>
        <argsstring>(int32 n, int32 m, dtype x) noexcept</argsstring>
        <name>legendre_p</name>
        <param>
          <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Associated Legendre Polynomial of the first kind</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the legendre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the degree of the legendre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value. Requires -1 &lt;= x &lt;= 1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/legendre_p.hpp" line="72" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/legendre_p.hpp" bodystart="72" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1a01b91c2b39784adf9cc483f70e7fb6dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::polynomial::legendre_p</definition>
        <argsstring>(int32 n, const NdArray&lt; dtype &gt; &amp;inArrayX) noexcept</argsstring>
        <name>legendre_p</name>
        <param>
          <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArrayX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Legendre Polynomial of the first kind</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the legendre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inArrayX</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value. Requires -1 &lt;= x &lt;= 1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/legendre_p.hpp" line="92" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/legendre_p.hpp" bodystart="92" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1a827b13f0771bab049d9fe9beab85e3f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::polynomial::legendre_p</definition>
        <argsstring>(int32 n, int32 m, const NdArray&lt; dtype &gt; &amp;inArrayX) noexcept</argsstring>
        <name>legendre_p</name>
        <param>
          <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArrayX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Associated Legendre Polynomial of the first kind</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the legendre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the degree of the legendre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inArrayX</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value. Requires -1 &lt;= x &lt;= 1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/legendre_p.hpp" line="117" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/legendre_p.hpp" bodystart="117" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1af6777e9b7531f6b085869caf34bb6570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double nc::polynomial::legendre_q</definition>
        <argsstring>(int32 n, dtype x) noexcept</argsstring>
        <name>legendre_q</name>
        <param>
          <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Legendre Polynomial of the second kind</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the legendre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value. Requires -1 &lt;= x &lt;= 1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/legendre_q.hpp" line="50" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/legendre_q.hpp" bodystart="50" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1aa61279477eb9616d0440429b9eff2680" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::polynomial::legendre_q</definition>
        <argsstring>(int32 n, const NdArray&lt; dtype &gt; &amp;inArrayX) noexcept</argsstring>
        <name>legendre_q</name>
        <param>
          <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArrayX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Legendre Polynomial of the second kind</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the legendre polynomial </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inArrayX</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value. Requires -1 &lt;= x &lt;= 1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/legendre_q.hpp" line="70" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/legendre_q.hpp" bodystart="70" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1a3a27bfe54dde95c234714104c25f3ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype1</type>
          </param>
          <param>
            <type>typename dtype2</type>
          </param>
        </templateparamlist>
        <type>std::complex&lt; double &gt;</type>
        <definition>std::complex&lt;double&gt; nc::polynomial::spherical_harmonic</definition>
        <argsstring>(uint32 n, int32 m, dtype1 theta, dtype2 phi) noexcept</argsstring>
        <name>spherical_harmonic</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>dtype1</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>dtype2</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the value of the Spherical Harmonic Ynm(theta, phi). The spherical harmonics Ynm(theta, phi) are the angular portion of the solution to Laplace&apos;s equation in spherical coordinates where azimuthal symmetry is not present.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>order of the harmonic </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>degree of the harmonic </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>Azimuthal (longitudinal) coordinate; must be in [0, 2*pi]. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>Polar (colatitudinal) coordinate; must be in [0, pi]. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/spherical_harmonic.hpp" line="56" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/spherical_harmonic.hpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1a2793e853d45d1461ece38b426d82c22e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype1</type>
          </param>
          <param>
            <type>typename dtype2</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double nc::polynomial::spherical_harmonic_i</definition>
        <argsstring>(uint32 n, int32 m, dtype1 theta, dtype2 phi) noexcept</argsstring>
        <name>spherical_harmonic_i</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>dtype1</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>dtype2</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the imaginary part of the Spherical Harmonic Ynm(theta, phi). The spherical harmonics Ynm(theta, phi) are the angular portion of the solution to Laplace&apos;s equation in spherical coordinates where azimuthal symmetry is not present.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>order of the harmonic </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>degree of the harmonic </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>Azimuthal (longitudinal) coordinate; must be in [0, 2*pi]. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>Polar (colatitudinal) coordinate; must be in [0, pi]. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/spherical_harmonic.hpp" line="96" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/spherical_harmonic.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1polynomial_1a522a573355aeafa0ca73d9244618682c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype1</type>
          </param>
          <param>
            <type>typename dtype2</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double nc::polynomial::spherical_harmonic_r</definition>
        <argsstring>(uint32 n, int32 m, dtype1 theta, dtype2 phi) noexcept</argsstring>
        <name>spherical_harmonic_r</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1ae1001b41fda4e17eb2dd197b4bfa56df" kindref="member">int32</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>dtype1</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>dtype2</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the real part of the Spherical Harmonic Ynm(theta, phi). The spherical harmonics Ynm(theta, phi) are the angular portion of the solution to Laplace&apos;s equation in spherical coordinates where azimuthal symmetry is not present.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>order of the harmonic </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>degree of the harmonic </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>Azimuthal (longitudinal) coordinate; must be in [0, 2*pi]. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>Polar (colatitudinal) coordinate; must be in [0, pi]. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/spherical_harmonic.hpp" line="76" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/spherical_harmonic.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Polynomial/chebyshev_t.hpp" line="39" column="1"/>
  </compounddef>
</doxygen>
